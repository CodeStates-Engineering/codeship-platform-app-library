{"version":3,"file":"index-63bb0788.js","sources":["../../../src/components/molecules/Switch/index.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\nimport styles from './index.module.scss';\nimport { useSubscribedState } from '../../../hooks';\nimport { Label } from '../../atoms';\n\nimport type { Typography } from '../../../hooks';\nimport type { LabelContainerProps } from '../../atoms';\n\nexport interface SwitchProps {\n  value?: boolean;\n  onChange?: (checked: boolean) => void;\n  disabled?: boolean;\n  id?: string;\n\n  label?: string;\n  className?: string;\n  labelStyle?: Typography & Pick<LabelContainerProps, 'direction'>;\n  inputStyle?: {\n    size?: 'small' | 'medium' | 'large';\n    width?: CSSStyleDeclaration['width'];\n  };\n}\n\nexport const Switch = ({\n  value = false,\n  onChange,\n  disabled,\n  id,\n  label,\n  className,\n  labelStyle,\n  inputStyle,\n}: SwitchProps) => {\n  const [turned, setTurned] = useSubscribedState(value);\n\n  const style = useMemo(\n    () => ({\n      width: inputStyle?.width,\n    }),\n    [inputStyle?.width],\n  );\n\n  const sizeClassName = styles[`size-${inputStyle?.size ?? 'medium'}`];\n  const turnedClassName = turned ? styles.on : styles.off;\n\n  return (\n    <Label.Container direction={labelStyle?.direction} className={className}>\n      {label ? (\n        <Label\n          htmlFor={label}\n          fontSize={labelStyle?.fontSize}\n          fontWeight={labelStyle?.fontWeight}\n        >\n          {label}\n        </Label>\n      ) : null}\n      <div style={style} className={styles['switch-container']}>\n        <div\n          className={`${styles['switch-content']} ${sizeClassName} ${turnedClassName}`}\n        >\n          <div\n            className={`${styles['switch-ball']} ${sizeClassName} ${turnedClassName}`}\n          />\n          <input\n            id={id}\n            type=\"checkbox\"\n            className={styles['switch-input']}\n            name={label}\n            checked={turned}\n            disabled={disabled}\n            onChange={({ target: { checked } }) => {\n              setTurned?.(checked);\n              onChange?.(checked);\n            }}\n          />\n        </div>\n      </div>\n    </Label.Container>\n  );\n};\n"],"names":["Switch","value","onChange","disabled","id","label","className","labelStyle","inputStyle","turned","setTurned","useSubscribedState","style","useMemo","sizeClassName","styles","turnedClassName","jsxs","Label","jsx","checked"],"mappings":"i4CAwBOA,EAAA,CAAA,CAAgB,MAAAC,EAAA,GACb,SAAAC,EACR,SAAAC,EACA,GAAAC,EACA,MAAAC,EACA,UAAAC,EACA,WAAAC,EACA,WAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAV,CAAA,EAEAW,EAAAC,EAAA,QAAc,KAAA,CACL,MAAAL,GAAA,YAAAA,EAAA,KACc,GACrB,CAAAA,GAAA,YAAAA,EAAA,KAAA,CACkB,EAGpBM,EAAAC,EAAA,SAAAP,GAAA,YAAAA,EAAA,OAAA,UAAA,EACAQ,EAAAP,EAAAM,EAAA,GAAAA,EAAA,IAEA,OAAAE,EAAA,KAAAC,EAAA,UAAA,CAAA,UAAAX,GAAA,YAAAA,EAAA,UAAA,UAAAD,EAAA,SAAA,CAEKD,EAAAc,EAAA,IACCD,EAAC,CAAA,QAAAb,EACU,SAAAE,GAAA,YAAAA,EAAA,SACa,WAAAA,GAAA,YAAAA,EAAA,WACE,SAAAF,CAEvB,CAAA,EAAA,KAEDc,MAAA,MAAA,CAAA,MAAAP,EAAA,UAAAG,EAAA,kBAAA,EAAA,SAAAE,EAAA,KAEF,MAAC,CAAA,UAAA,GAAAF,EAAA,gBAAA,KAAAD,KAAAE,IAC4D,SAAA,CAE3DG,EAAA,IAAA,MAAC,CAAA,UAAA,GAAAJ,EAAA,aAAA,KAAAD,KAAAE,GACyD,CAAA,EAC1DG,EAAA,IACA,QAAC,CAAA,GAAAf,EACC,KAAA,WACK,UAAAW,EAAA,cAAA,EAC2B,KAAAV,EAC1B,QAAAI,EACG,SAAAN,EACT,SAAA,CAAA,CAAA,OAAA,CAAA,QAAAiB,CAAA,CAAA,IAAA,CAEEV,GAAA,MAAAA,EAAAU,GACAlB,GAAA,MAAAA,EAAAkB,EAAkB,CACpB,CAAA,CACF,CAAA,CAAA,EAAA,CAEJ,CAAA,CAAA,CAGN"}