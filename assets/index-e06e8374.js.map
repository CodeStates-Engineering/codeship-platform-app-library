{"version":3,"file":"index-e06e8374.js","sources":["../../../src/components/atoms/InputContainer/index.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nimport styles from './index.module.scss';\nimport { cleanClassName } from '../../../utils';\n\ninterface CommonProps {\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport interface InputContainerProps extends CommonProps {\n  validationMessage?: string | null;\n  validationSpace?: boolean;\n}\n\nconst InputContainerContext =\n  createContext<InputContainerProps['validationMessage']>(undefined);\n\n// TODO: 추후 라벨 컴포넌트를 해당 컴포넌트에서 관리하도록 변경해야할듯.\nconst InputContainerMain = ({\n  children,\n  className,\n  validationMessage,\n  validationSpace,\n}: InputContainerProps) => (\n  <div className={cleanClassName(`${styles['input-container']} ${className}`)}>\n    <InputContainerContext.Provider value={validationMessage}>\n      <div className={styles['input-interaction-wrap']}>{children}</div>\n    </InputContainerContext.Provider>\n    {validationMessage ? (\n      <p className={styles['validation-message']}>{validationMessage}</p>\n    ) : (\n      validationSpace && <div className={styles['validation-space']} />\n    )}\n  </div>\n);\n\nexport interface InputContainerInteractionProps extends CommonProps {\n  onClick?: React.HTMLAttributes<HTMLDivElement>['onClick'];\n  size?: 'none' | 'small' | 'medium' | 'large';\n  borderRadius?: '4' | '8';\n}\n\nconst InputContainerInteraction = ({\n  children,\n  onClick,\n  size = 'large',\n  className,\n  borderRadius = '8',\n}: InputContainerInteractionProps) => {\n  const validationMessage = useContext(InputContainerContext);\n  return (\n    <div\n      className={cleanClassName(\n        `${styles['input-wrap']} ${styles[`border-radius-${borderRadius}`]} ${\n          validationMessage && styles.error\n        } ${size !== 'none' && styles[`size-${size}`]} ${className}`,\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const InputContainer = Object.assign(InputContainerMain, {\n  Interaction: InputContainerInteraction,\n});\n"],"names":["InputContainerContext","createContext","InputContainerMain","children","className","validationMessage","validationSpace","jsxs","cleanClassName","styles","jsx","InputContainerInteraction","onClick","size","borderRadius","useContext","InputContainer"],"mappings":"wzCAeAA,EAAAC,EAAAA,cAAA,MAAA,EAIAC,EAAA,CAAA,CAA4B,SAAAC,EAC1B,UAAAC,EACA,kBAAAC,EACA,gBAAAC,CAEF,IAAAC,EAAA,KAAA,MAAA,CAAA,UAAAC,EAAA,GAAAC,EAAA,iBAAA,KAAAL,GAAA,EAAA,SAAA,CAEIM,EAAA,IAAAV,EAAA,SAAA,CAAA,MAAAK,EAAA,SAAAK,EAAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,wBAAA,EAAA,SAAAN,CAAA,CAAA,EAAA,EAEAE,EAAAK,EAAA,IAAA,IAAA,CAAA,UAAAD,EAAA,oBAAA,EAAA,SAAAJ,CAAA,CAAA,EAAAC,GAAAI,EAAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,kBAAA,EAAA,CAIiE,CAAA,CAAA,EAWrEE,EAAA,CAAA,CAAmC,SAAAR,EACjC,QAAAS,EACA,KAAAC,EAAA,QACO,UAAAT,EACP,aAAAU,EAAA,GAEF,IAAA,CACE,MAAAT,EAAAU,aAAAf,CAAA,EACA,OAAAU,EAAA,IACE,MAAC,CAAA,UAAAF,EACY,GAAAC,EAAA,YAAA,KAAAA,EAAA,iBAAAK,GAAA,KAAAT,GAAAI,EAAA,SAAAI,IAAA,QAAAJ,EAAA,QAAAI,GAAA,KAAAT,GAGwC,EACnD,QAAAQ,EACA,SAAAT,CAEC,CAAA,CAGP,EAEOa,EAAA,OAAA,OAAAd,EAAA,CAAyD,YAAAS,CAEhE,CAAA"}