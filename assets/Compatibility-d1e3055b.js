var E=Object.defineProperty;var l=(n,t,s)=>t in n?E(n,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[t]=s;var o=(n,t,s)=>(l(n,typeof t!="symbol"?t+"":t,s),s);import{j as L}from"./jsx-runtime-4ca860c5.js";import{r as p}from"./index-61bf1805.js";const e=class e{};o(e,"Link"),o(e,"useLocation"),o(e,"useLayoutEffect",p.useLayoutEffect),o(e,"injectDependencies",(t,{location:s,link:h})=>{switch(t){case"next":{const u=h,f=s;e.Link=function({to:c,...i}){return L.jsx(u,{...i,href:c})},e.useLocation=()=>{const a=f(),{asPath:c,query:i}=a,[y,d]=c.split("?");return{...a,pathname:y,search:d&&Object.keys(i).length?`?${d}`:""}},e.useLayoutEffect=p.useEffect;break}case"react":{const u=h,f=s;e.Link=function(c){return L.jsx(u,{...c})},e.useLocation=f;break}}});let r=e;try{r.useLayoutEffect.displayName="Compatibility.useLayoutEffect",r.useLayoutEffect.__docgenInfo={description:"The signature is identical to `useEffect`, but it fires synchronously after all DOM mutations.\nUse this to read layout from the DOM and synchronously re-render. Updates scheduled inside\n`useLayoutEffect` will be flushed synchronously, before the browser has a chance to paint.\n\nPrefer the standard `useEffect` when possible to avoid blocking visual updates.\n\nIf youâ€™re migrating code from a class component, `useLayoutEffect` fires in the same phase as\n`componentDidMount` and `componentDidUpdate`.",displayName:"Compatibility.useLayoutEffect",props:{}}}catch{}export{r as C};
//# sourceMappingURL=Compatibility-d1e3055b.js.map
