{"version":3,"file":"index-1b5e49c4.js","sources":["../../../src/components/molecules/Textbox/index.tsx"],"sourcesContent":["import { Input, Label } from '@components/atoms';\nimport type {\n  InputProps,\n  InputType,\n  InputWrapProps,\n  LabelContainerProps,\n} from '@components/atoms';\nimport { useSubscribedState, useValidation } from '@hooks';\nimport type { Validation, UseTypographyClassNameParams } from '@hooks';\nimport { getLabelSpace } from '@utils';\n\nimport styles from './index.module.scss';\n\ntype TextboxType = Exclude<InputType, 'button'>;\n\nexport interface TextboxProps<T extends TextboxType = 'text'>\n  extends OptionalPick<\n    InputProps<T>,\n    | 'value'\n    | 'onChange'\n    | 'type'\n    | 'placeholder'\n    | 'disabled'\n    | 'onFocus'\n    | 'ref'\n    | 'id'\n    | 'onClick'\n    | 'className'\n    | 'onBlur'\n  > {\n  label?: string;\n  unit?: React.ReactNode;\n  validation?: Validation<TextboxProps<T>['value']>;\n  labelStyle?: Pick<LabelContainerProps, 'direction'> &\n    UseTypographyClassNameParams;\n  inputStyle?: OptionalPick<InputWrapProps, 'borderRadius' | 'width' | 'size'> &\n    UseTypographyClassNameParams;\n}\n\nexport const Textbox = <T extends TextboxType = 'text'>({\n  value: originalValue,\n  unit,\n  onChange,\n  type = 'text' as T,\n  placeholder,\n  disabled,\n  onFocus,\n  id,\n  onClick,\n  ref,\n  label,\n  validation,\n  className,\n  onBlur,\n  labelStyle,\n  inputStyle,\n}: TextboxProps<T>) => {\n  const [value, setValue] = useSubscribedState(originalValue);\n\n  const { validationMessage, checkValidation } = useValidation(\n    value,\n    validation,\n    label || id,\n  );\n\n  return (\n    <Label.Container direction={labelStyle?.direction} className={className}>\n      {label ? (\n        <Label\n          fontSize={labelStyle?.fontSize}\n          fontWeight={labelStyle?.fontWeight}\n          space={getLabelSpace(labelStyle?.direction, inputStyle?.size)}\n          htmlFor={label}\n        >\n          {label}\n        </Label>\n      ) : null}\n      <Input.Wrap\n        validationMessage={validationMessage}\n        size={inputStyle?.size}\n        borderRadius={inputStyle?.borderRadius}\n        width={inputStyle?.width}\n      >\n        <Input\n          fontSize={inputStyle?.fontSize}\n          fontWeight={inputStyle?.fontWeight}\n          onClick={onClick}\n          onBlur={onBlur}\n          ref={ref}\n          name={label}\n          disabled={disabled}\n          placeholder={placeholder}\n          onFocus={onFocus}\n          value={value}\n          id={id}\n          onChange={(value) => {\n            setValue?.(value);\n            checkValidation?.(value);\n            onChange?.(value);\n          }}\n          type={type}\n        />\n        {typeof unit === 'string' ? (\n          <div className={styles.unit}>{unit}</div>\n        ) : (\n          unit\n        )}\n      </Input.Wrap>\n    </Label.Container>\n  );\n};\n"],"names":["Textbox","originalValue","unit","onChange","type","placeholder","disabled","onFocus","id","onClick","ref","label","validation","className","onBlur","labelStyle","inputStyle","value","setValue","useSubscribedState","validationMessage","checkValidation","useValidation","jsxs","Label","jsx","getLabelSpace","Input","value2","styles"],"mappings":"svCAuCOA,EAAA,CAAA,CAAiD,MAAAC,EAC/C,KAAAC,EACP,SAAAC,EACA,KAAAC,EAAA,OACO,YAAAC,EACP,SAAAC,EACA,QAAAC,EACA,GAAAC,EACA,QAAAC,EACA,IAAAC,EACA,MAAAC,EACA,WAAAC,EACA,UAAAC,EACA,OAAAC,EACA,WAAAC,EACA,WAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAlB,CAAA,EAEA,CAAA,kBAAAmB,EAAA,gBAAAC,CAAA,EAAAC,EAA+CL,EAC7CL,EACAD,GAAAH,CACS,EAGX,OAAAe,EAAA,KAAAC,EAAA,UAAA,CAAA,UAAAT,GAAA,YAAAA,EAAA,UAAA,UAAAF,EAAA,SAAA,CAEKF,EAAAc,EAAA,IACCD,EAAC,CAAA,SAAAT,GAAA,YAAAA,EAAA,SACuB,WAAAA,GAAA,YAAAA,EAAA,WACE,MAAAW,EAAAX,GAAA,YAAAA,EAAA,UAAAC,GAAA,YAAAA,EAAA,IAAA,EACoC,QAAAL,EACnD,SAAAA,CAER,CAAA,EAAA,KAEDY,EAAA,KACJI,EAAA,KAAO,CAAN,kBAAAP,EACC,KAAAJ,GAAA,YAAAA,EAAA,KACkB,aAAAA,GAAA,YAAAA,EAAA,aACQ,MAAAA,GAAA,YAAAA,EAAA,MACP,SAAA,CAEnBS,EAAA,IAAAE,EAAC,CAAA,SAAAX,GAAA,YAAAA,EAAA,SACuB,WAAAA,GAAA,YAAAA,EAAA,WACE,QAAAP,EACxB,OAAAK,EACA,IAAAJ,EACA,KAAAC,EACM,SAAAL,EACN,YAAAD,EACA,QAAAE,EACA,MAAAU,EACA,GAAAT,EACA,SAAAoB,GAAA,CAEEV,GAAA,MAAAA,EAAAU,GACAP,GAAA,MAAAA,EAAAO,GACAzB,GAAA,MAAAA,EAAAyB,EAAgB,EAClB,KAAAxB,CACA,CAAA,EACF,OAAAF,GAAA,SAAAuB,EAAA,IAAA,MAAA,CAAA,UAAAI,EAAA,KAAA,SAAA3B,CAAA,CAAA,EAAAA,CAIE,CAAA,CAAA,CAEJ,CAAA,CAAA,CAGN"}