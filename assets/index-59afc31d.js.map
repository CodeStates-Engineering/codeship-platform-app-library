{"version":3,"file":"index-59afc31d.js","sources":["../../../src/components/molecules/Selectbox/index.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { ChevronDown } from 'react-feather';\n\nimport styles from './index.module.scss';\nimport { useComponentSelfState, useValidation } from '../../../hooks';\nimport { cleanClassName } from '../../../utils';\nimport { FocusLayer, Options, Input, Label } from '../../atoms';\n\nimport type { Validation, Typography } from '../../../hooks';\nimport type {\n  InputProps,\n  OptionsProps,\n  ValidOptionValue,\n  InputWrapProps,\n  LabelContainerProps,\n} from '../../atoms';\n\nexport interface SelectboxProps<\n  _ValidOptionValue = ValidOptionValue,\n  _Multiple = boolean,\n> extends Pick<\n      OptionsProps<_ValidOptionValue, _Multiple>,\n      'options' | 'float' | 'onChange' | 'value' | 'multiple' | 'optionStyle'\n    >,\n    Pick<InputProps<'button'>, 'disabled' | 'placeholder' | 'id' | 'ref'>,\n    Pick<InputWrapProps, 'onClick'> {\n  onlyUpdatedByParent?: boolean;\n  label?: string;\n  validation?: Validation<SelectboxProps<_ValidOptionValue>['value']>;\n  validationSpace?: boolean;\n  className?: string;\n  inputStyle?: Pick<InputWrapProps, 'borderRadius' | 'size' | 'width'> &\n    Typography;\n  labelStyle?: Pick<LabelContainerProps, 'direction'> & Typography;\n}\n\nexport const Selectbox = <\n  _ValidOptionValue extends ValidOptionValue = ValidOptionValue,\n  _Multiple extends boolean = false,\n>({\n  value,\n  options,\n  onChange,\n  float,\n  onlyUpdatedByParent,\n  disabled,\n  placeholder,\n  id,\n  ref,\n  onClick,\n  label,\n  validation,\n  validationSpace,\n  className,\n  inputStyle,\n  labelStyle,\n  multiple,\n  optionStyle,\n}: SelectboxProps<_ValidOptionValue, _Multiple>) => {\n  const [opened, setOpened] = useState(false);\n\n  const [selectedValue, setSelectedValue] = useComponentSelfState(\n    value,\n    onlyUpdatedByParent,\n  );\n\n  const selectedOption = options?.find(({ value }) => value === selectedValue);\n\n  const { validationMessage, checkValidation } = useValidation(\n    value,\n    validation,\n    label || id,\n  );\n\n  return (\n    <FocusLayer\n      onClick={() => setOpened(false)}\n      focused={opened}\n      className={cleanClassName(`${styles.selectbox} ${className}`)}\n      bodyScroll\n    >\n      <Input.Container\n        validationMessage={validationMessage}\n        validationSpace={validationSpace}\n      >\n        <Label.Container direction={labelStyle?.direction}>\n          {label ? (\n            <Label\n              htmlFor={label}\n              fontSize={labelStyle?.fontSize}\n              fontWeight={labelStyle?.fontWeight}\n            >\n              {label}\n            </Label>\n          ) : null}\n          <Input.Wrap\n            size={inputStyle?.size}\n            borderRadius={inputStyle?.borderRadius}\n            width={inputStyle?.width}\n            onClick={(e) => {\n              setOpened(!opened);\n              onClick?.(e);\n            }}\n          >\n            <Input\n              id={id}\n              name={label}\n              type=\"button\"\n              ref={ref}\n              value={selectedOption?.label}\n              disabled={disabled}\n              placeholder={placeholder}\n              fontSize={inputStyle?.fontSize}\n              fontWeight={inputStyle?.fontWeight}\n            />\n            <ChevronDown\n              className={cleanClassName(\n                `${styles.arrow} ${opened && styles['opened-arrow']}`,\n              )}\n            />\n          </Input.Wrap>\n        </Label.Container>\n        <Options\n          opened={opened}\n          options={options}\n          multiple={multiple}\n          value={selectedValue}\n          float={float}\n          className={styles['select-box-default-width']}\n          optionStyle={optionStyle}\n          onChange={(value) => {\n            setSelectedValue?.(value);\n            checkValidation?.(value);\n            onChange?.(value);\n            setOpened(false);\n          }}\n        />\n      </Input.Container>\n    </FocusLayer>\n  );\n};\n"],"names":["Selectbox","value","options","onChange","float","onlyUpdatedByParent","disabled","placeholder","id","ref","onClick","label","validation","validationSpace","className","inputStyle","labelStyle","multiple","optionStyle","opened","setOpened","useState","selectedValue","setSelectedValue","useComponentSelfState","selectedOption","value2","validationMessage","checkValidation","useValidation","jsx","FocusLayer","cleanClassName","styles","jsxs","Input","Label","e","ChevronDown","Options"],"mappings":"0hBAoCOA,EAAA,CAAA,CAGL,MAAAC,EACA,QAAAC,EACA,SAAAC,EACA,MAAAC,EACA,oBAAAC,EACA,SAAAC,EACA,YAAAC,EACA,GAAAC,EACA,IAAAC,EACA,QAAAC,EACA,MAAAC,EACA,WAAAC,EACA,gBAAAC,EACA,UAAAC,EACA,WAAAC,EACA,WAAAC,EACA,SAAAC,EACA,YAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEA,CAAAC,EAAAC,CAAA,EAAAC,EAA0CvB,EACxCI,CACA,EAGFoB,EAAAvB,GAAA,YAAAA,EAAA,KAAA,CAAA,CAAA,MAAAwB,CAAA,IAAAA,IAAAJ,GAEA,CAAA,kBAAAK,EAAA,gBAAAC,CAAA,EAAAC,EAA+C5B,EAC7CW,EACAD,GAAAH,CACS,EAGX,OAAAsB,EAAA,IACEC,EAAC,CAAA,QAAA,IAAAX,EAAA,EAAA,EAC+B,QAAAD,EACrB,UAAAa,EAAA,GAAAC,EAAA,aAAAnB,GAAA,EACmD,WAAA,GAClD,SAAAoB,EAAA,KAEVC,EAAA,UAAO,CAAN,kBAAAR,EACC,gBAAAd,EACA,SAAA,CAEAqB,EAAA,KAAAE,EAAA,UAAA,CAAA,UAAApB,GAAA,YAAAA,EAAA,UAAA,SAAA,CACGL,EAAAmB,EAAA,IACCM,EAAC,CAAA,QAAAzB,EACU,SAAAK,GAAA,YAAAA,EAAA,SACa,WAAAA,GAAA,YAAAA,EAAA,WACE,SAAAL,CAEvB,CAAA,EAAA,KAEDuB,EAAA,KACJC,EAAA,KAAO,CAAN,KAAApB,GAAA,YAAAA,EAAA,KACmB,aAAAA,GAAA,YAAAA,EAAA,aACQ,MAAAA,GAAA,YAAAA,EAAA,MACP,QAAAsB,GAAA,CAEjBjB,EAAA,CAAAD,CAAA,EACAT,GAAA,MAAAA,EAAA2B,EAAW,EACb,SAAA,CAEAP,EAAA,IAAAK,EAAC,CAAA,GAAA3B,EACC,KAAAG,EACM,KAAA,SACD,IAAAF,EACL,MAAAgB,GAAA,YAAAA,EAAA,MACuB,SAAAnB,EACvB,YAAAC,EACA,SAAAQ,GAAA,YAAAA,EAAA,SACsB,WAAAA,GAAA,YAAAA,EAAA,UACE,CAAA,EAC1Be,EAAA,IACAQ,EAAC,CAAA,UAAAN,EACY,GAAAC,EAAA,SAAAd,GAAAc,EAAA,cAAA,GACyC,CACpD,CAAA,CACF,CAAA,CAAA,CACF,EAAA,EACFH,EAAA,IACAS,EAAC,CAAA,OAAApB,EACC,QAAAjB,EACA,SAAAe,EACA,MAAAK,EACO,MAAAlB,EACP,UAAA6B,EAAA,0BAAA,EAC4C,YAAAf,EAC5C,SAAAQ,GAAA,CAEEH,GAAA,MAAAA,EAAAG,GACAE,GAAA,MAAAA,EAAAF,GACAvB,GAAA,MAAAA,EAAAuB,GACAN,EAAA,EAAA,CAAe,CACjB,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAGN"}