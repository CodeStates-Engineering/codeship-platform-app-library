{"version":3,"file":"index-d976f7e8.js","sources":["../../../src/components/organisms/Modal/index.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\nimport { createContext, useContext } from 'react';\nimport { X } from 'react-feather';\n\nimport styles from './index.module.scss';\nimport { cleanClassName } from '../../../utils';\nimport { Button, FocusLayer } from '../../atoms';\nimport { TabMenu } from '../../molecules';\n\nimport type { FocusLayerProps } from '../../atoms';\nimport type { TabMenuProps } from '../../molecules';\n\nconst ModalContext = createContext<(() => void) | undefined>(undefined);\n\ninterface CommonProps {\n  children?: ReactNode;\n  className?: string;\n}\n\ntype FormType = 'section' | 'form';\n\nexport interface ModalProps\n  extends CommonProps,\n    Pick<FocusLayerProps, 'priority' | 'blur'>,\n    Pick<\n      React.DetailedHTMLProps<\n        React.FormHTMLAttributes<HTMLFormElement>,\n        HTMLFormElement\n      >,\n      'onSubmit'\n    > {\n  opened?: boolean;\n  onClose?: () => void;\n  type?: FormType;\n}\n\nconst ModalMain = ({\n  children,\n  className,\n  opened,\n  onClose,\n  priority = 1,\n  blur = true,\n  type = 'section',\n  onSubmit,\n}: ModalProps) => {\n  const commonProps = {\n    className: cleanClassName(`${styles['modal-container']} ${className}`),\n    children: (\n      <ModalContext.Provider value={onClose}>{children}</ModalContext.Provider>\n    ),\n  };\n\n  return (\n    <FocusLayer\n      focused={opened}\n      onBlur={onClose}\n      blur={blur}\n      priority={priority}\n    >\n      {opened\n        ? {\n            section: <section {...commonProps} />,\n            form: <form {...commonProps} onSubmit={onSubmit} />,\n          }[type]\n        : null}\n    </FocusLayer>\n  );\n};\nexport interface ModalHeaderProps extends CommonProps {\n  border?: boolean;\n}\n\nexport const ModalHeader = ({\n  children,\n  className,\n  border = false,\n}: ModalHeaderProps) => {\n  const handleClose = useContext(ModalContext);\n  return (\n    <header\n      className={cleanClassName(\n        `${styles['modal-header']} ${\n          border && styles['with-border']\n        } ${className}`,\n      )}\n    >\n      <div>{children}</div>\n      <Button\n        icon={<X />}\n        theme=\"bluish-gray700/0\"\n        size=\"small\"\n        onClick={handleClose}\n      />\n    </header>\n  );\n};\n\nexport interface ModalTabMenuHeaderProps\n  extends Omit<ModalHeaderProps, 'children'> {\n  items?: TabMenuProps['items'];\n}\nconst ModalTabMenuHeader = ({\n  className,\n  items,\n  border = true,\n}: ModalTabMenuHeaderProps) => {\n  const handleClose = useContext(ModalContext);\n  return (\n    <header\n      className={cleanClassName(\n        `${styles['modal-header']} ${styles['with-tab']} ${\n          border && styles['with-border']\n        } ${className}`,\n      )}\n    >\n      <TabMenu\n        items={items}\n        className={styles['tab-menu']}\n        fontSize=\"medium\"\n        fontWeight={700}\n        bottomLineWeight=\"none\"\n      />\n      <Button\n        icon={<X />}\n        theme=\"bluish-gray700/0\"\n        size=\"small\"\n        onClick={handleClose}\n      />\n    </header>\n  );\n};\n\nexport type ModalBodyProps = CommonProps;\nconst ModalBody = ({ children, className }: ModalBodyProps) => (\n  <section className={cleanClassName(`${styles['modal-body']} ${className}`)}>\n    {children}\n  </section>\n);\n\nexport interface ModalFooterProps extends CommonProps {\n  border?: boolean;\n}\n\nconst ModalFooter = ({\n  children,\n  className,\n  border = true,\n}: ModalFooterProps) => (\n  <footer\n    className={`${styles['modal-footer']} ${\n      border && styles['with-border']\n    } ${className}`}\n  >\n    {children}\n  </footer>\n);\n\nexport const Modal = Object.assign(ModalMain, {\n  Header: ModalHeader,\n  TabMenuHeader: ModalTabMenuHeader,\n  Body: ModalBody,\n  Footer: ModalFooter,\n});\n"],"names":["ModalContext","createContext","ModalMain","children","className","opened","onClose","priority","blur","type","onSubmit","commonProps","cleanClassName","styles","jsx","FocusLayer","ModalHeader","border","handleClose","useContext","jsxs","Button","X","ModalTabMenuHeader","items","TabMenu","ModalBody","ModalFooter","Modal"],"mappings":"s5CAYAA,EAAAC,EAAAA,cAAA,MAAA,EAwBAC,EAAA,CAAA,CAAmB,SAAAC,EACjB,UAAAC,EACA,OAAAC,EACA,QAAAC,EACA,SAAAC,EAAA,EACW,KAAAC,EAAA,GACJ,KAAAC,EAAA,UACA,SAAAC,CAET,IAAA,CACE,MAAAC,EAAA,CAAoB,UAAAC,EAAA,GAAAC,EAAA,iBAAA,KAAAT,GAAA,EACmD,SAAAU,EAAA,IAAAd,EAAA,SAAA,CAAA,MAAAM,EAAA,SAAAH,EAAA,CAElB,EAIrD,OAAAW,EAAA,IACEC,EAAC,CAAA,QAAAV,EACU,OAAAC,EACD,KAAAE,EACR,SAAAD,EACA,SAAAF,EAAA,CAGI,QAAAS,EAAAA,IAAA,UAAA,CAAA,GAAAH,CAAA,CAAA,EACqC,KAAAG,EAAA,IAAA,OAAA,CAAA,GAAAH,EAAA,SAAAD,CAAA,CAAA,CACc,EAAAD,CAAA,EAAA,IAEnD,CAAA,CAGV,EAKOO,EAAA,CAAA,CAAqB,SAAAb,EAC1B,UAAAC,EACA,OAAAa,EAAA,EAEF,IAAA,CACE,MAAAC,EAAAC,aAAAnB,CAAA,EACA,OAAAoB,EAAA,KACE,SAAC,CAAA,UAAAR,EACY,GAAAC,EAAA,cAAA,KAAAI,GAAAJ,EAAA,aAAA,KAAAT,GAGL,EACN,SAAA,CAEAU,MAAA,MAAA,CAAA,SAAAX,EAAA,EAAeW,EAAA,IACfO,EAAC,CAAA,KAAAP,EAAAA,IAAAQ,EAAA,EAAA,EACU,MAAA,mBACH,KAAA,QACD,QAAAJ,CACI,CAAA,CACX,CAAA,CAAA,CAGN,EAMAK,EAAA,CAAA,CAA4B,UAAAnB,EAC1B,MAAAoB,EACA,OAAAP,EAAA,EAEF,IAAA,CACE,MAAAC,EAAAC,aAAAnB,CAAA,EACA,OAAAoB,EAAA,KACE,SAAC,CAAA,UAAAR,EACY,GAAAC,EAAA,cAAA,KAAAA,EAAA,UAAA,KAAAI,GAAAJ,EAAA,aAAA,KAAAT,GAGL,EACN,SAAA,CAEAU,EAAA,IAAAW,EAAC,CAAA,MAAAD,EACC,UAAAX,EAAA,UAAA,EAC4B,SAAA,SACnB,WAAA,IACG,iBAAA,MACK,CAAA,EACnBC,EAAA,IACAO,EAAC,CAAA,KAAAP,EAAAA,IAAAQ,EAAA,EAAA,EACU,MAAA,mBACH,KAAA,QACD,QAAAJ,CACI,CAAA,CACX,CAAA,CAAA,CAGN,EAGAQ,EAAA,CAAA,CAAA,SAAAvB,EAAA,UAAAC,CAAA,IAAAU,MAAA,UAAA,CAAA,UAAAF,EAAA,GAAAC,EAAA,YAAA,KAAAT,GAAA,EAAA,SAAAD,CAAA,CAAA,EAUAwB,EAAA,CAAA,CAAqB,SAAAxB,EACnB,UAAAC,EACA,OAAAa,EAAA,EAEF,IAAAH,EAAA,IACE,SAAC,CAAA,UAAA,GAAAD,EAAA,cAAA,KAAAI,GAAAJ,EAAA,aAAA,KAAAT,IAGK,SAAAD,CAEH,CACH,EAGKyB,EAAA,OAAA,OAAA1B,EAAA,CAAuC,OAAAc,EACpC,cAAAO,EACO,KAAAG,EACT,OAAAC,CAER,CAAA"}