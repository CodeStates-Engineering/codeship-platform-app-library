{"version":3,"file":"index-adb8cc3f.js","sources":["../../../node_modules/.pnpm/react-feather@2.0.10_react@18.2.0/node_modules/react-feather/dist/icons/check.js","../../../src/components/atoms/Options/index.tsx"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Check = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"20 6 9 17 4 12\"\n  }));\n});\nCheck.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCheck.displayName = 'Check';\nexport default Check;","import { createRef, useMemo, useState, useEffect } from 'react';\nimport { Check } from 'react-feather';\n\nimport styles from './index.module.scss';\nimport { Compatibility } from '../../../plugins';\nimport { cleanClassName } from '../../../utils';\n\ntype ValidOptionValue = string | number | undefined;\n\nexport interface Option<\n  _OptionValue extends ValidOptionValue = ValidOptionValue,\n> {\n  label: string;\n  value: _OptionValue;\n}\n\ntype OptionsValue<_Option, _Multiple> = _Multiple extends true\n  ? _Option[]\n  : _Option;\n\nexport interface OptionsProps<\n  _Option extends Option = Option,\n  _Multiple extends boolean = false,\n> {\n  opened?: boolean;\n  options?: _Option[];\n  multiple?: _Multiple;\n  value?: OptionsValue<_Option, _Multiple>;\n  onSelect?: (option?: OptionsValue<_Option, _Multiple>) => void;\n  onKeyDown?: (event: KeyboardEvent) => void;\n  float?: 'top' | 'bottom';\n  className?: string;\n}\n\nexport const Options = <\n  _Option extends Option = Option,\n  _Multiple extends boolean = false,\n>({\n  opened = false,\n  options,\n  multiple,\n  value,\n  onSelect,\n  onKeyDown,\n  float = 'bottom',\n  className,\n}: OptionsProps<_Option, _Multiple>) => {\n  const refList = useMemo(\n    () => options?.map(() => createRef<HTMLButtonElement>()),\n    [options],\n  );\n\n  const optionData = useMemo(\n    () =>\n      refList &&\n      options?.map((option, index) => {\n        let isAlreadySelected = false;\n\n        if (value) {\n          isAlreadySelected =\n            value instanceof Array\n              ? value.some(\n                  (selectedOption) =>\n                    option.value === selectedOption.value &&\n                    option.label === selectedOption.label,\n                )\n              : value.value === option.value && value.label === option.label;\n        }\n\n        return {\n          option,\n          ref: refList[index],\n          isAlreadySelected,\n        };\n      }),\n    [options, refList, value],\n  );\n\n  const [optionIndexForSelect, setOptionIndexForSelect] = useState(-1);\n\n  const [openState, setOpenState] = useState<boolean | 'closing' | 'opening'>(\n    opened,\n  );\n\n  Compatibility.useLayoutEffect(() => {\n    setOpenState((prevOpenState) => {\n      if (prevOpenState !== opened) {\n        return opened ? 'opening' : 'closing';\n      }\n      return prevOpenState;\n    });\n  }, [opened]);\n\n  const isChangeOpenState = typeof openState === 'string';\n\n  Compatibility.useLayoutEffect(() => {\n    if (isChangeOpenState) {\n      const nextOpenState = openState === 'opening';\n      if (nextOpenState) {\n        setOptionIndexForSelect(-1);\n\n        const firstSelectedOptionRef = optionData?.find(\n          ({ isAlreadySelected }) => isAlreadySelected,\n        )?.ref;\n\n        if (firstSelectedOptionRef) {\n          firstSelectedOptionRef.current?.scrollIntoView({\n            block: 'start',\n          });\n        }\n      }\n      const timeout = setTimeout(() => setOpenState(nextOpenState), 250);\n      return () => clearTimeout(timeout);\n    }\n  }, [openState, isChangeOpenState, optionData]);\n\n  const optionDataForSelect = optionData?.[optionIndexForSelect];\n\n  const handleSelect = useMemo(\n    () =>\n      onSelect &&\n      ((multiple\n        ? (value, optionForSelect, isAlreadySelected) => {\n            const selectedOptions = value as _Option[] | undefined;\n            const handleSelect = onSelect as (option?: _Option[]) => void;\n\n            if (!selectedOptions) {\n              return handleSelect([optionForSelect]);\n            }\n\n            return handleSelect(\n              isAlreadySelected\n                ? selectedOptions.filter(\n                    ({ label, value }) =>\n                      label !== optionForSelect.label ||\n                      value !== optionForSelect.value,\n                  )\n                : [...selectedOptions, optionForSelect],\n            );\n          }\n        : (value, optionForSelect, isAlreadySelected) => {\n            const selectedOption = value as _Option | undefined;\n            const handleSelect = onSelect as (option?: _Option) => void;\n\n            if (!selectedOption) {\n              return handleSelect(optionForSelect);\n            }\n\n            return handleSelect(\n              isAlreadySelected ? undefined : optionForSelect,\n            );\n          }) satisfies (\n        _value: typeof value,\n        _optionForSelect: _Option,\n        _isAlreadySelected: boolean,\n      ) => void),\n    [multiple, onSelect],\n  );\n\n  const [mouseHoverLock, setMouseHoverLock] = useState(false);\n\n  useEffect(() => {\n    if (openState === true && optionData) {\n      const keyboardEvent = (event: KeyboardEvent) => {\n        const { key } = event;\n        switch (key) {\n          case 'Enter':\n            event.preventDefault();\n            return (\n              optionDataForSelect &&\n              handleSelect?.(\n                value,\n                optionDataForSelect.option,\n                optionDataForSelect.isAlreadySelected,\n              )\n            );\n\n          case 'ArrowUp':\n          case 'ArrowDown':\n            setMouseHoverLock(true);\n            event.preventDefault();\n\n            return setOptionIndexForSelect((prevIndex) => {\n              if (key === 'ArrowDown') {\n                prevIndex =\n                  prevIndex < optionData.length - 1 ? prevIndex + 1 : prevIndex;\n              } else {\n                prevIndex = prevIndex > 0 ? prevIndex - 1 : 0;\n              }\n\n              optionData[prevIndex].ref.current?.scrollIntoView({\n                block: 'start',\n              });\n\n              return prevIndex;\n            });\n\n          default:\n            return onKeyDown?.(event);\n        }\n      };\n\n      document.addEventListener('keydown', keyboardEvent);\n      return () => document.removeEventListener('keydown', keyboardEvent);\n    }\n  }, [\n    handleSelect,\n    onKeyDown,\n    openState,\n    optionData,\n    optionDataForSelect,\n    value,\n  ]);\n\n  return openState && optionData?.length ? (\n    <section\n      className={cleanClassName(\n        `${styles.options} ${styles[float]} ${\n          isChangeOpenState && styles[openState]\n        } ${className}`,\n      )}\n    >\n      <ul\n        className={cleanClassName(\n          `${styles['option-container']} ${\n            !mouseHoverLock && styles['mouse-hover-enabled']\n          }`,\n        )}\n      >\n        {optionData.map(({ option, ref, isAlreadySelected }, index) => (\n          <li key={index}>\n            <button\n              type=\"button\"\n              ref={ref}\n              className={cleanClassName(\n                `${styles['option-item']} ${\n                  mouseHoverLock &&\n                  optionIndexForSelect === index &&\n                  styles.hovered\n                } ${isAlreadySelected && styles.selected}`,\n              )}\n              onClick={() => handleSelect?.(value, option, isAlreadySelected)}\n              onMouseEnter={() =>\n                openState === true &&\n                !mouseHoverLock &&\n                setOptionIndexForSelect(index)\n              }\n              onMouseMove={() => setMouseHoverLock(false)}\n            >\n              <div>{option.label}</div>\n              {multiple ? (\n                <div className={styles['check-icon-wrap']}>\n                  {isAlreadySelected ? <Check /> : null}\n                </div>\n              ) : null}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </section>\n  ) : (\n    <></>\n  );\n};\n"],"names":["_extends","target","i","source","key","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","sourceKeys","Check","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","PropTypes","Check$1","Options","opened","options","multiple","value","onSelect","onKeyDown","float","className","refList","useMemo","createRef","optionData","option","index","isAlreadySelected","selectedOption","optionIndexForSelect","setOptionIndexForSelect","useState","openState","setOpenState","Compatibility","prevOpenState","isChangeOpenState","nextOpenState","firstSelectedOptionRef","_a","_b","timeout","optionDataForSelect","handleSelect","value2","optionForSelect","selectedOptions","handleSelect2","label","value3","mouseHoverLock","setMouseHoverLock","useEffect","keyboardEvent","event","prevIndex","jsx","cleanClassName","styles","jsxs","Fragment"],"mappings":"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","x_google_ignoreList":[0]}