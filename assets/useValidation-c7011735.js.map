{"version":3,"file":"useValidation-c7011735.js","sources":["../../../src/hooks/useValidation.tsx"],"sourcesContent":["import {\n  useCallback as createCallback,\n  useState as createState,\n  useContext as getContext,\n  useEffect as createEffect,\n} from 'react';\n\nimport { ValidationContext } from '../utils';\n\nexport type Validation<TValue> =\n  | ((value: TValue) => string | undefined)\n  | undefined;\n\nexport const useValidation = <TValue,>(\n  value: TValue,\n  validation: Validation<TValue>,\n  storeKey?: string,\n) => {\n  if (!validation) {\n    return {};\n  }\n\n  const [validationMessage, setValidationMessage] = createState<\n    string | undefined\n  >();\n\n  const checkValidation = createCallback(\n    (value: TValue) => setValidationMessage(validation(value)),\n    [validation],\n  );\n\n  if (storeKey) {\n    const store = getContext(ValidationContext);\n    if (store) {\n      createEffect(() => {\n        store.set(storeKey, () => {\n          const validationMessage = validation(value);\n          setValidationMessage(validationMessage);\n          return validationMessage;\n        });\n        return () => {\n          store.delete(storeKey);\n        };\n      }, [validation, value, storeKey]);\n    }\n  }\n\n  return {\n    validationMessage,\n    checkValidation,\n  };\n};\n"],"names":["useValidation","value","validation","storeKey","validationMessage","setValidationMessage","createState","checkValidation","createCallback","store","getContext","ValidationContext","createEffect"],"mappings":"2EAaO,MAAMA,EAAgB,CAC3BC,EACAC,EACAC,IACG,CACH,GAAI,CAACD,EACH,MAAO,GAGT,KAAM,CAACE,EAAmBC,CAAoB,EAAIC,EAEhD,SAAA,EAEIC,EAAkBC,EAAA,YACrBP,GAAkBI,EAAqBH,EAAWD,CAAK,CAAC,EACzD,CAACC,CAAU,CAAA,EAGb,GAAIC,EAAU,CACN,MAAAM,EAAQC,aAAWC,CAAiB,EACtCF,GACFG,EAAAA,UAAa,KACLH,EAAA,IAAIN,EAAU,IAAM,CAClBC,MAAAA,EAAoBF,EAAWD,CAAK,EAC1C,OAAAI,EAAqBD,CAAiB,EAC/BA,CAAA,CACR,EACM,IAAM,CACXK,EAAM,OAAON,CAAQ,CAAA,GAEtB,CAACD,EAAYD,EAAOE,CAAQ,CAAC,EAI7B,MAAA,CACL,kBAAAC,EACA,gBAAAG,CAAA,CAEJ"}