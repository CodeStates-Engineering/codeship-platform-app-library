{"version":3,"file":"index-ab5429b3.js","sources":["../../../src/components/atoms/Button/index.tsx"],"sourcesContent":["import { useMemo, useState } from 'react';\nimport type { ReactNode } from 'react';\n\nimport {\n  useTypographyClassName,\n  useValidationMessageDynamicHeight,\n} from '@hooks';\nimport type { UseTypographyClassNameParams } from '@hooks';\nimport { Compatibility } from '@plugins';\nimport { cleanClassName } from '@utils';\n\nimport styles from './index.module.scss';\n\ntype HtmlButtonProps = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\nexport interface ButtonProps\n  extends Pick<\n      HtmlButtonProps,\n      'children' | 'disabled' | 'type' | 'onClick' | 'className'\n    >,\n    UseTypographyClassNameParams,\n    Pick<React.CSSProperties, 'width'> {\n  delay?: number;\n  size?: 'small3x' | 'small' | 'medium' | 'large';\n  theme?:\n    | 'white/purple600'\n    | 'white/bluish-gray800'\n    | 'purple600/0'\n    | 'bluish-gray700/0'\n    | 'bluish-gray300/0'\n    | 'bluish-gray500/0'\n    | 'bluish-gray400/0/bluish-gray200'\n    | 'bluish-gray700/0/bluish-gray200'\n    | 'bluish-gray400/bluish-gray10/bluish-gray200';\n  icon?: ReactNode;\n  iconDirection?: 'left' | 'right';\n  shape?: 'round' | 'default';\n  padding?: boolean;\n  focusOutline?: boolean;\n  textAlign?: 'left' | 'center' | 'right';\n  validationMessage?: string | null;\n}\n\nexport const Button = ({\n  delay,\n  type = 'button',\n  children,\n  size = 'large',\n  theme = 'white/purple600',\n  onClick,\n  disabled = false,\n  shape = 'default',\n  iconDirection = 'left',\n  icon,\n  padding = true,\n  fontSize = 'normal',\n  fontWeight = 700,\n  focusOutline = true,\n  className,\n  width,\n  textAlign = 'center',\n  validationMessage,\n}: ButtonProps) => {\n  const [delayState, setDelayState] = useState<'before' | 'delaying' | 'after'>(\n    'after',\n  );\n  const { messageRef, wrapHeightStyle } = useValidationMessageDynamicHeight(\n    !!validationMessage,\n  );\n\n  const childrenType = useMemo(() => {\n    if (icon && children) {\n      return 'both';\n    }\n    return icon ? 'icon' : 'text';\n  }, [icon, children]);\n\n  Compatibility.useLayoutEffect(() => {\n    if (!disabled && delay) {\n      setDelayState('before');\n      setTimeout(() => setDelayState('delaying'));\n      setTimeout(() => setDelayState('after'), delay);\n    }\n  }, [delay, disabled]);\n\n  const isDelaying = delayState === 'delaying';\n  const isDelayButton = delayState === 'before' || isDelaying;\n  const isDisabled = disabled || isDelayButton;\n\n  const { typographyClassName } = useTypographyClassName({\n    fontSize,\n    fontWeight,\n  });\n\n  const style = useMemo(() => ({ width }), [width]);\n\n  return (\n    <>\n      <button\n        type={type}\n        className={cleanClassName(\n          `${\n            isDelayButton ? styles['delayed-button'] : styles.button\n          } ${typographyClassName} ${focusOutline && styles['focus-outline']} ${\n            styles[`shape-${shape}`]\n          } ${styles[`size-${size}`]} ${\n            styles[`icon-direction-${iconDirection}`]\n          } ${styles[`children-type-${childrenType}`]} ${\n            styles[theme.replaceAll('/', '_')]\n          } ${padding && styles.padding} ${className}\n        ${childrenType !== 'icon' && styles[`text-align-${textAlign}`]}\n        ${validationMessage && styles.error}\n        `,\n        )}\n        onClick={onClick}\n        disabled={isDisabled}\n        style={style}\n      >\n        {delay && isDelayButton ? (\n          <div\n            className={`${styles['delay-bar']} ${\n              isDelaying && styles.delaying\n            }`}\n            style={{ transition: `transform ${delay / 1000}s linear` }}\n          />\n        ) : null}\n        {children && <div className={styles['button-content']}>{children}</div>}\n        {icon ? (\n          <div className={`${styles['button-content']} ${styles.icon}`}>\n            {icon}\n          </div>\n        ) : null}\n      </button>\n      <div\n        className={`${validationMessage && styles['validation-message-wrap']}`}\n        style={wrapHeightStyle}\n      >\n        <p\n          ref={messageRef}\n          className={`${validationMessage && styles['validation-message']}`}\n        >\n          {validationMessage}\n        </p>\n      </div>\n    </>\n  );\n};\n"],"names":["Button","delay","type","children","size","theme","onClick","disabled","shape","iconDirection","icon","padding","fontSize","fontWeight","focusOutline","className","width","textAlign","validationMessage","delayState","setDelayState","useState","messageRef","wrapHeightStyle","useValidationMessageDynamicHeight","childrenType","useMemo","Compatibility","isDelaying","isDelayButton","isDisabled","typographyClassName","useTypographyClassName","style","jsxs","Fragment","cleanClassName","styles","jsx"],"mappings":"ujFA8COA,EAAA,CAAA,CAAgB,MAAAC,EACrB,KAAAC,EAAA,SACO,SAAAC,EACP,KAAAC,EAAA,QACO,MAAAC,EAAA,kBACC,QAAAC,EACR,SAAAC,EAAA,GACW,MAAAC,EAAA,UACH,cAAAC,EAAA,OACQ,KAAAC,EAChB,QAAAC,EAAA,GACU,SAAAC,EAAA,SACC,WAAAC,EAAA,IACE,aAAAC,EAAA,GACE,UAAAC,EACf,MAAAC,EACA,UAAAC,EAAA,SACY,kBAAAC,CAEd,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAoC,OAClC,EAEF,CAAA,WAAAC,EAAA,gBAAAC,CAAA,EAAAC,EAAwC,CAAA,CAAAN,CACpC,EAGJO,EAAAC,EAAAA,QAAA,IACEhB,GAAAP,EACE,OAEFO,EAAA,OAAA,OAAuB,CAAAA,EAAAP,CAAA,CAAA,EAGzBwB,EAAA,gBAAA,IAAA,CACE,CAAApB,GAAAN,IACEmB,EAAA,QAAA,EACA,WAAA,IAAAA,EAAA,UAAA,CAAA,EACA,WAAA,IAAAA,EAAA,OAAA,EAAAnB,CAAA,EACF,EAAA,CAAAA,EAAAM,CAAA,CAAA,EAGF,MAAAqB,EAAAT,IAAA,WACAU,EAAAV,IAAA,UAAAS,EACAE,EAAAvB,GAAAsB,EAEA,CAAA,oBAAAE,CAAA,EAAAC,EAAA,CAAuD,SAAApB,EACrD,WAAAC,CACA,CAAA,EAGFoB,EAAAP,EAAAA,QAAA,KAAA,CAAA,MAAAV,CAAA,GAAA,CAAAA,CAAA,CAAA,EAEA,OAAAkB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEID,EAAA,KAAA,SAAC,CAAA,KAAAhC,EACC,UAAAkC,EACW,GAAAP,EAAAQ,EAAA,gBAAA,EAAAA,EAAA,UAAAN,KAAAjB,GAAAuB,EAAA,eAAA,KAAAA,EAAA,SAAA7B,GAAA,KAAA6B,EAAA,QAAAjC,GAAA,KAAAiC,EAAA,kBAAA5B,GAAA,KAAA4B,EAAA,iBAAAZ,GAAA,KAAAY,EAAAhC,EAAA,WAAA,IAAA,GAAA,CAAA,KAAAM,GAAA0B,EAAA,WAAAtB;AAAA,UASwBU,IAAA,QAAAY,EAAA,cAAApB,GAAA;AAAA,UAC0BC,GAAAmB,EAAA;AAAA,SAC/B,EAE9B,QAAA/B,EACA,SAAAwB,EACU,MAAAG,EACV,SAAA,CAEChC,GAAA4B,EAAAS,EAAA,IACC,MAAC,CAAA,UAAA,GAAAD,EAAA,WAAA,KAAAT,GAAAS,EAAA,WAEwB,MAAA,CAAA,WAAA,aAAApC,EAAA,aAAA,CAEkC,CAAA,EAAA,KAEzDE,GAAAmC,EAAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,gBAAA,EAAA,SAAAlC,EAAA,EAC6DO,EAAA4B,EAAA,IAAA,MAAA,CAAA,UAAA,GAAAD,EAAA,gBAAA,KAAAA,EAAA,OAAA,SAAA3B,CAAA,CAAA,EAAA,IAK7D,CAAA,CAAA,EACN4B,EAAA,IACA,MAAC,CAAA,UAAA,GAAApB,GAAAmB,EAAA,yBAAA,IACoE,MAAAd,EAC5D,SAAAe,EAAA,IAEP,IAAC,CAAA,IAAAhB,EACM,UAAA,GAAAJ,GAAAmB,EAAA,oBAAA,IACyD,SAAAnB,CAE7D,CAAA,CACH,CAAA,CACF,CAAA,CAAA,CAGN"}