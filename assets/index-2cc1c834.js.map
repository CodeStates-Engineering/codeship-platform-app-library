{"version":3,"file":"index-2cc1c834.js","sources":["../../../src/hooks/useClosingState.tsx","../../../src/components/atoms/FocusLayer/index.tsx"],"sourcesContent":["import { useState } from 'react';\n\nimport { Compatibility } from '../plugins';\n\nexport const useClosingState = (opened = false, closingDuration = 300) => {\n  const state = useState<boolean | 'closing'>(opened);\n  const [status, setStatus] = state;\n\n  Compatibility.useLayoutEffect(\n    () =>\n      setStatus(\n        opened ? true : (beforeStatus) => (beforeStatus ? 'closing' : false),\n      ),\n    [opened],\n  );\n\n  const isClosing = status === 'closing';\n  Compatibility.useLayoutEffect(() => {\n    if (isClosing) {\n      const timer = setTimeout(() => {\n        setStatus(false);\n      }, closingDuration);\n      return () => clearTimeout(timer);\n    }\n  }, [isClosing]);\n\n  return state;\n};\n","import styles from './index.module.scss';\nimport { useClosingState } from '../../../hooks';\nimport { Compatibility } from '../../../plugins';\nimport { cleanClassName } from '../../../utils';\n\nexport interface FocusLayerProps {\n  children?: React.ReactNode;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n  focused?: boolean;\n  blur?: boolean;\n  className?: string;\n  bodyScroll?: boolean;\n  priority?: 1 | 2 | 3;\n}\n\nexport const FocusLayer = ({\n  children,\n  onClick,\n  focused,\n  blur,\n  className,\n  bodyScroll = false,\n  priority = 3,\n}: FocusLayerProps) => {\n  const [focusStatus] = useClosingState(focused);\n  const isClosing = focusStatus === 'closing';\n\n  Compatibility.useLayoutEffect(() => {\n    if (!bodyScroll) {\n      const { classList } = document.body;\n      if (focused) {\n        classList.add(styles['fixed-body']);\n      }\n      return () => classList.remove(styles['fixed-body']);\n    }\n  }, [focused, bodyScroll]);\n\n  const priorityClassName = styles[`priority-${priority}`];\n\n  return (\n    <>\n      <div\n        className={cleanClassName(\n          `${styles['focus-layer']} ${\n            focusStatus && priorityClassName\n          } ${className}`,\n        )}\n      >\n        {children}\n      </div>\n      {focusStatus ? (\n        <div\n          onClick={onClick}\n          className={cleanClassName(\n            `${styles['background-layer']} ${\n              isClosing && styles.closing\n            } ${priorityClassName} ${blur && styles.blur}`,\n          )}\n        />\n      ) : null}\n    </>\n  );\n};\n"],"names":["useClosingState","opened","closingDuration","state","useState","status","setStatus","Compatibility","beforeStatus","isClosing","timer","FocusLayer","children","onClick","focused","blur","className","bodyScroll","priority","focusStatus","classList","styles","priorityClassName","jsxs","Fragment","jsx","cleanClassName"],"mappings":"sKAIO,MAAMA,EAAkB,CAACC,EAAS,GAAOC,EAAkB,MAAQ,CAClE,MAAAC,EAAQC,WAA8BH,CAAM,EAC5C,CAACI,EAAQC,CAAS,EAAIH,EAEdI,EAAA,gBACZ,IACED,EACEL,EAAS,GAAQO,GAAkBA,EAAe,UAAY,EAChE,EACF,CAACP,CAAM,CAAA,EAGT,MAAMQ,EAAYJ,IAAW,UAC7B,OAAAE,EAAc,gBAAgB,IAAM,CAClC,GAAIE,EAAW,CACP,MAAAC,EAAQ,WAAW,IAAM,CAC7BJ,EAAU,EAAK,GACdJ,CAAe,EACX,MAAA,IAAM,aAAaQ,CAAK,EACjC,EACC,CAACD,CAAS,CAAC,EAEPN,CACT,w9BCZOQ,EAAA,CAAA,CAAoB,SAAAC,EACzB,QAAAC,EACA,QAAAC,EACA,KAAAC,EACA,UAAAC,EACA,WAAAC,EAAA,GACa,SAAAC,EAAA,CAEf,IAAA,CACE,KAAA,CAAAC,CAAA,EAAAnB,EAAAc,CAAA,EACAL,EAAAU,IAAA,UAEAZ,EAAA,gBAAA,IAAA,CACE,GAAA,CAAAU,EAAA,CACE,KAAA,CAAA,UAAAG,CAAA,EAAA,SAAA,KACA,OAAAN,GACEM,EAAA,IAAAC,EAAA,YAAA,CAAA,EAEF,IAAAD,EAAA,OAAAC,EAAA,YAAA,CAAA,EACF,EAAA,CAAAP,EAAAG,CAAA,CAAA,EAGF,MAAAK,EAAAD,EAAA,YAAAH,GAAA,EAEA,OAAAK,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEIC,EAAA,IAAA,MAAC,CAAA,UAAAC,EACY,GAAAL,EAAA,aAAA,KAAAF,GAAAG,KAAAN,GAGL,EACN,SAAAJ,CAEC,CAAA,EACHO,EAAAM,EAAA,IAEE,MAAC,CAAA,QAAAZ,EACC,UAAAa,EACW,GAAAL,EAAA,kBAAA,KAAAZ,GAAAY,EAAA,WAAAC,KAAAP,GAAAM,EAAA,MAG+B,CAC1C,CAAA,EAAA,IAEA,CAAA,CAAA,CAGV"}