{"version":3,"file":"index-dfc3fe59.js","sources":["../../../node_modules/.pnpm/react-feather@2.0.10_react@18.2.0/node_modules/react-feather/dist/icons/search.js","../../../src/utils/regex.ts","../../../src/components/molecules/Searchbox/index.tsx"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Search = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }));\n});\nSearch.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSearch.displayName = 'Search';\nexport default Search;","export const regex = {\n  email: /^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$/,\n  password:\n    /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d!@#$%^&*()_+]{8,}$/,\n  slug: /^[a-z0-9]+(?:-[a-z0-9]+)*$/,\n  phone: /^[+]?[(]?[0-9]{2,3}[)]?[-\\s]?[0-9]{3,4}[-\\s]?[0-9]{4}$/,\n  number: /[^0-9]/g,\n  symbols: /[^a-z0-9가-힣]/gi,\n};\n","import { useMemo, useState } from 'react';\nimport { Search } from 'react-feather';\n\nimport styles from './index.module.scss';\nimport { useSubscribedState, useValidation } from '../../../hooks';\nimport { cleanClassName, regex } from '../../../utils';\nimport { FocusLayer, Options, Input, Label } from '../../atoms';\n\nimport type { Validation, Typography } from '../../../hooks';\nimport type {\n  InputProps,\n  InputWrapProps,\n  OptionsProps,\n  LabelContainerProps,\n} from '../../atoms';\n\nexport interface SearchboxProps\n  extends Pick<\n      InputProps<'text'>,\n      | 'value'\n      | 'onChange'\n      | 'disabled'\n      | 'placeholder'\n      | 'onFocus'\n      | 'onClick'\n      | 'id'\n      | 'ref'\n    >,\n    Pick<OptionsProps<string, false>, 'float' | 'optionStyle'> {\n  selfFilter?: boolean;\n  options?: string[];\n  label?: string;\n  validation?: Validation<SearchboxProps['value']>;\n  validationSpace?: boolean;\n  className?: string;\n  inputStyle?: Pick<InputWrapProps, 'size' | 'width' | 'borderRadius'> &\n    Typography;\n  labelStyle?: Pick<LabelContainerProps, 'direction'> & Typography;\n}\n\nexport const Searchbox = ({\n  float,\n  value,\n  options: stringOptions,\n  onChange,\n  selfFilter = true,\n  disabled,\n  placeholder,\n  onFocus,\n  id,\n  onClick,\n  ref,\n  label,\n  validation,\n  validationSpace,\n  className,\n  inputStyle,\n  labelStyle,\n  optionStyle,\n}: SearchboxProps) => {\n  const [opened, setOpened] = useState(false);\n  const [inputText, setInputText] = useSubscribedState(value);\n\n  const options = useMemo(() => {\n    const options = stringOptions?.map((value) => ({\n      label: value,\n      value,\n    }));\n\n    if (!selfFilter || !options || !inputText) {\n      return options;\n    }\n\n    const standardizeString = (value: string) =>\n      value.toLowerCase().replace(regex.symbols, '');\n\n    const standardizeInputTextArray = inputText\n      .split(' ')\n      .map((value) => standardizeString(value));\n\n    return options.filter(({ value }) => {\n      const standardizeOption = standardizeString(value);\n      return standardizeInputTextArray.every((inputText) =>\n        standardizeOption.includes(inputText),\n      );\n    });\n  }, [selfFilter, inputText, stringOptions]);\n\n  const { validationMessage, checkValidation } = useValidation(\n    inputText,\n    validation,\n    label || id,\n  );\n\n  const handleChange = (value?: string) => {\n    setInputText?.(value);\n    onChange?.(value);\n    checkValidation?.(value);\n  };\n\n  return (\n    <FocusLayer\n      onBlur={() => setOpened(false)}\n      focused={opened}\n      className={cleanClassName(`${styles.searchbox} ${className}`)}\n      bodyScroll\n    >\n      <Input.Container\n        validationMessage={validationMessage}\n        validationSpace={validationSpace}\n      >\n        <Label.Container direction={labelStyle?.direction}>\n          {label ? (\n            <Label\n              fontSize={labelStyle?.fontSize}\n              fontWeight={labelStyle?.fontWeight}\n              htmlFor={label}\n            >\n              {label}\n            </Label>\n          ) : null}\n          <Input.Wrap\n            onClick={onClick}\n            size={inputStyle?.size}\n            borderRadius={inputStyle?.borderRadius}\n          >\n            <Input\n              name={label}\n              ref={ref}\n              onChange={(value) => {\n                setOpened(true);\n                handleChange(value);\n              }}\n              fontSize={inputStyle?.fontSize}\n              fontWeight={inputStyle?.fontWeight}\n              onClick={() => setOpened(true)}\n              onFocus={onFocus}\n              id={id}\n              value={inputText}\n              disabled={disabled}\n              placeholder={placeholder}\n            />\n            <Search />\n          </Input.Wrap>\n        </Label.Container>\n        <Options\n          optionStyle={optionStyle}\n          opened={opened}\n          options={options}\n          value={inputText}\n          onChange={(value) => {\n            setOpened(false);\n            handleChange(value);\n          }}\n          float={float}\n        />\n      </Input.Container>\n    </FocusLayer>\n  );\n};\n"],"names":["_extends","target","i","source","key","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","sourceKeys","Search","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","PropTypes","Search$1","regex","Searchbox","float","value","stringOptions","onChange","selfFilter","disabled","placeholder","onFocus","id","onClick","label","validation","validationSpace","className","inputStyle","labelStyle","optionStyle","opened","setOpened","useState","inputText","setInputText","useSubscribedState","options","useMemo","options2","value2","standardizeString","standardizeInputTextArray","standardizeOption","inputText2","validationMessage","checkValidation","useValidation","handleChange","jsx","FocusLayer","cleanClassName","styles","jsxs","Input","Label","Options"],"mappings":"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","x_google_ignoreList":[0]}